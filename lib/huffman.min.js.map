{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///huffman.min.js","webpack:///webpack/bootstrap d66179d10b10ca53f383","webpack:///./src/index.js","webpack:///./src/utils.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","utils","Huffman","code","_encoded","groupsize","D","pAlphabet","alphabetNext","sorted","character","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","s","Symbol","iterator","next","done","letter","encoded","err","slice","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","insertSorted","huffman","frequencies","q","alphabet","calculateProbabilities","alphabetSorted","sort","compare","item","index","splice","total","map","f","n","a","b"],"mappings":"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","file":"huffman.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"huffman\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"huffman\"] = factory();\n\telse\n\t\troot[\"huffman\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"huffman\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"huffman\"] = factory();\n\telse\n\t\troot[\"huffman\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar utils = __webpack_require__(1);\n\t\n\tvar Huffman = function () {\n\t  function Huffman(code) {\n\t    _classCallCheck(this, Huffman);\n\t\n\t    this._encoded = {};\n\t  }\n\t\n\t  _createClass(Huffman, [{\n\t    key: 'huffman',\n\t\n\t\n\t    /**\n\t     * Implements huffman algorithm\n\t     *\n\t     * @param {Number} groupsize Number of elements to group in this iteration\n\t     * @param {Number} D Length of the code\n\t     * @param {Array.<Object>} alphabet\n\t     * @param {Array.<String>} code For instance [0,1,2]\n\t     */\n\t    value: function huffman(groupsize, D, pAlphabet, code) {\n\t      var alphabetNext = void 0;\n\t      var sorted = pAlphabet;\n\t\n\t      for (var i = 0; i < groupsize; i++) {\n\t        var character = sorted[sorted.length - (groupsize - i)];\n\t\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t          for (var _iterator = character.s[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var letter = _step.value;\n\t\n\t            this.encoded[letter] = code[i] + (this.encoded[letter] || '');\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError = true;\n\t          _iteratorError = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t              _iterator.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError) {\n\t              throw _iteratorError;\n\t            }\n\t          }\n\t        }\n\t      }\n\t\n\t      // end of recursion\n\t      if (pAlphabet.length === groupsize) {\n\t        return;\n\t      }\n\t\n\t      alphabetNext = sorted.slice(0, sorted.length - groupsize);\n\t\n\t      // create new element from the last D ones\n\t      var c = { s: '', p: 0 };\n\t\n\t      var _iteratorNormalCompletion2 = true;\n\t      var _didIteratorError2 = false;\n\t      var _iteratorError2 = undefined;\n\t\n\t      try {\n\t        for (var _iterator2 = sorted.slice(-groupsize)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t          var s = _step2.value;\n\t\n\t          c.s = c.s + s.s;\n\t          c.p = c.p + s.p;\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t            _iterator2.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError2) {\n\t            throw _iteratorError2;\n\t          }\n\t        }\n\t      }\n\t\n\t      ;\n\t\n\t      utils.insertSorted(alphabetNext, c);\n\t      this.huffman(D, D, alphabetNext, code);\n\t    }\n\t  }, {\n\t    key: 'encode',\n\t    value: function encode(code, frequencies) {\n\t      var D = code.length;\n\t\n\t      /**\n\t      * @member {int} Number of elements of the source alphabet\n\t      */\n\t      var q = void 0;\n\t\n\t      /**\n\t      * @member {Object}\n\t      */\n\t      var alphabet = void 0;\n\t\n\t      this.encoded = {};\n\t      alphabet = utils.calculateProbabilities(frequencies);\n\t\n\t      q = frequencies.length;\n\t      var groupsize = 2 + (q - 2) % (D - 1);\n\t\n\t      var alphabetSorted = alphabet.sort(utils.compare);\n\t\n\t      this.huffman(groupsize, D, alphabetSorted, code);\n\t      return this.encoded;\n\t    }\n\t  }]);\n\t\n\t  return Huffman;\n\t}();\n\t\n\texports.default = Huffman;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t* Insert item in alphabet according to the value of item.p\n\t* @param {Array.<Object>} Sorted array of {s:<string>, p:<probability>}\n\t* @param {Array.<Object>} {s:<string>, p:<probability>}\n\t*\n\t* @return {Array.<Object>} [{s:<string>, p:<probability>}]\n\t*/\n\tfunction insertSorted(alphabet, item) {\n\t  var index = void 0;\n\t\n\t  if (alphabet[0].p < item.p) {\n\t    index = 0;\n\t  } else if (alphabet[alphabet.length - 1].p > item.p) {\n\t    index = alphabet.length;\n\t  } else {\n\t    for (var i = 0; i < alphabet.length - 1; i++) {\n\t\n\t      if (alphabet[i].p > item.p && alphabet[i + 1].p <= item.p) {\n\t        index = i + 1;\n\t\n\t        break;\n\t      }\n\t    } // for\n\t  }\n\t\n\t  alphabet.splice(index, 0, item);\n\t};\n\t\n\t/**\n\t * Translate an array containing the frequencies\n\t * of the symbols in the alphabet to a new array\n\t * with the probabilities of each one\n\t *\n\t * @param {Array.<Object>} Array of {s: <string>, p: <counter> }\n\t * @return {Array.<Object>} Array of { s: <string>, p: <probability> }\n\t * @private\n\t */\n\tfunction calculateProbabilities(frequencies) {\n\t  var total = 0;\n\t  var alphabet = {};\n\t\n\t  frequencies.map(function (item) {\n\t    return total += item.f;\n\t  });\n\t  alphabet = frequencies.map(function (item) {\n\t    var n = {};\n\t\n\t    n.s = item.s;\n\t    n.p = item.f / total;\n\t    return n;\n\t  });\n\t\n\t  return alphabet;\n\t};\n\t\n\t/**\n\t * Compares the field 'p' (probability)\n\t * in the given objects\n\t *\n\t * @param {Object} a {p: <probability>,...}\n\t * @param {Object} b {p: <probability>,...}\n\t *\n\t * @return {Number}\n\t */\n\tfunction compare(a, b) {\n\t  if (a.p > b.p) {\n\t    return -1;\n\t  };\n\t  if (a.p < b.p) {\n\t    return 1;\n\t  };\n\t  return 0;\n\t};\n\t\n\tmodule.exports = {\n\t  insertSorted: insertSorted,\n\t  calculateProbabilities: calculateProbabilities,\n\t  compare: compare\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** huffman.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d66179d10b10ca53f383\n **/","var utils = require('./utils.js');\n\nexport default class Huffman {\n  constructor(code) {\n    this._encoded = {};\n  };\n\n/**\n * Implements huffman algorithm\n *\n * @param {Number} groupsize Number of elements to group in this iteration\n * @param {Number} D Length of the code\n * @param {Array.<Object>} alphabet\n * @param {Array.<String>} code For instance [0,1,2]\n */\n  huffman(groupsize, D, pAlphabet, code) {\n    let alphabetNext;\n    let sorted = pAlphabet;\n\n    for (let i = 0; i < groupsize; i++) {\n      let character = sorted[sorted.length - (groupsize - i)];\n\n      for (let letter of character.s) {\n        this.encoded[letter] = code[i] + (this.encoded[letter] || '');\n      }\n    }\n\n    // end of recursion\n    if (pAlphabet.length === groupsize) {\n      return;\n    }\n\n    alphabetNext = sorted.slice(0, (sorted.length - groupsize));\n\n    // create new element from the last D ones\n    let c = {s: '', p: 0};\n\n    for (let s of sorted.slice(-groupsize)) {\n      c.s = c.s + s.s;\n      c.p = c.p + s.p;\n    };\n\n    utils.insertSorted(alphabetNext, c);\n    this.huffman(D, D, alphabetNext, code);\n  };\n\n  encode(code, frequencies) {\n    let D = code.length;\n\n    /**\n    * @member {int} Number of elements of the source alphabet\n    */\n    let q;\n\n    /**\n    * @member {Object}\n    */\n    let alphabet;\n\n    this.encoded = {};\n    alphabet = utils.calculateProbabilities(frequencies);\n\n    q = frequencies.length;\n    let groupsize = 2 + ((q - 2) % (D - 1));\n\n    let alphabetSorted = alphabet.sort(utils.compare);\n\n    this.huffman(groupsize, D, alphabetSorted, code);\n    return this.encoded;\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","/**\n* Insert item in alphabet according to the value of item.p\n* @param {Array.<Object>} Sorted array of {s:<string>, p:<probability>}\n* @param {Array.<Object>} {s:<string>, p:<probability>}\n*\n* @return {Array.<Object>} [{s:<string>, p:<probability>}]\n*/\nfunction insertSorted(alphabet, item) {\n  let index;\n\n  if (alphabet[0].p < item.p) {\n    index = 0;\n  } else if (alphabet[alphabet.length - 1].p > item.p) {\n    index = alphabet.length;\n  } else {\n    for (let i = 0; i < alphabet.length - 1 ; i++) {\n\n      if ((alphabet[i].p > item.p) && (alphabet[i + 1].p <= item.p)) {\n        index = i + 1;\n\n        break;\n      }\n    } // for\n  }\n\n  alphabet.splice(index, 0, item);\n};\n\n/**\n * Translate an array containing the frequencies\n * of the symbols in the alphabet to a new array\n * with the probabilities of each one\n *\n * @param {Array.<Object>} Array of {s: <string>, p: <counter> }\n * @return {Array.<Object>} Array of { s: <string>, p: <probability> }\n * @private\n */\nfunction calculateProbabilities(frequencies) {\n  let total = 0;\n  let alphabet = {};\n\n  frequencies.map((item) => total += item.f);\n  alphabet = frequencies.map(function (item) {\n    let n = {};\n\n    n.s = item.s;\n    n.p = (item.f) / total;\n    return n;\n  });\n\n  return alphabet;\n};\n\n/**\n * Compares the field 'p' (probability)\n * in the given objects\n *\n * @param {Object} a {p: <probability>,...}\n * @param {Object} b {p: <probability>,...}\n *\n * @return {Number}\n */\nfunction compare(a, b) {\n  if (a.p > b.p) {\n    return -1;\n  };\n  if (a.p < b.p) {\n    return 1;\n  };\n  return 0;\n};\n\nmodule.exports = {\n  insertSorted: insertSorted,\n  calculateProbabilities: calculateProbabilities,\n  compare: compare\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/utils.js\n **/"],"sourceRoot":""}